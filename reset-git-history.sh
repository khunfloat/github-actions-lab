#!/bin/bash

# ‡πÉ‡∏ä‡πâ script ‡∏ô‡∏µ‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏∞‡∏°‡∏±‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á!
# ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ö‡∏ô repo ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô

# ===== CONFIG =====
BRANCH_NAME="main"  # ‡πÅ‡∏Å‡πâ‡∏ä‡∏∑‡πà‡∏≠ branch ‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∑‡πà‡∏ô
COMMIT_MESSAGE="Initial commit after history reset"
# ===================

echo "üö® WARNING: This will completely reset the Git history for branch '$BRANCH_NAME'."
read -p "Are you sure you want to continue? (yes/[no]): " confirm

if [[ "$confirm" != "yes" ]]; then
  echo "‚ùå Aborted."
  exit 1
fi

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô git repo ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if [ ! -d ".git" ]; then
  echo "‚ùå This is not a Git repository."
  exit 1
fi

# ‡∏™‡∏£‡πâ‡∏≤‡∏á orphan branch ‡πÉ‡∏´‡∏°‡πà
echo "üì¶ Creating orphan branch..."
git checkout --orphan temp-history-reset

# ‡∏•‡∏ö staged ‡πÅ‡∏•‡∏∞ tracked files ‡∏≠‡∏≠‡∏Å
git reset --hard

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡∏∞ commit
echo "‚úÖ Adding files and committing..."
git add -A
git commit -m "$COMMIT_MESSAGE"

# ‡∏•‡∏ö branch ‡πÄ‡∏Å‡πà‡∏≤
echo "üßπ Deleting old branch '$BRANCH_NAME'..."
git branch -D $BRANCH_NAME

# ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ orphan branch ‡πÄ‡∏õ‡πá‡∏ô branch ‡πÄ‡∏î‡∏¥‡∏°
git branch -m $BRANCH_NAME

# Force push
echo "üöÄ Force pushing to remote origin/$BRANCH_NAME ..."
git push -f origin $BRANCH_NAME

echo "‚úÖ Git history has been reset and pushed!"

